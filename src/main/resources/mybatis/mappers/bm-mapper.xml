<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baron.member.MemberModel">

	<select id="selectMemberById" resultType="int" parameterType="string">
		SELECT COUNT(*)
		FROM member
		WHERE id = #{id}
	</select>

	<insert id="insertMember" parameterType="MemberModel">
		INSERT INTO member(id,
		pass, name,email,address,cell,home)
		VALUES (#{id}, #{password},
		#{name},#{email},#{address},#{cell},#{home})
	</insert>
	<select id="selectPass" resultType="String" parameterType="String">
		SELECT pass
		FROM member
		WHERE id = #{id}
	</select>

	<update id="updateMember" parameterType="MemberModel">
		UPDATE member
		SET pass =
		#{password},email = #{email},address = #{address},cell =
		#{cell},home =
		#{home}
		WHERE id = #{id}
	</update>

	<select id="selectMember" resultType="MemberModel"
		parameterType="MemberModel">
		SELECT *
		FROM member
		WHERE id = #{id}
		AND pass =
		#{password}
	</select>

	<select id="selectBlack" resultType="MemberModel">
		SELECT
		A.id,A.name,A.email,A.address,A.cell,A.Home,A.numborrow,A.numarrear
		FROM member as A, blackList as B
		WHERE A.id=B.id;
	</select>

	<select id="selectLate" resultType="MemberModel">
		SELECT
		A.id,A.name,A.email,A.address,A.cell,A.home, B.borrowdate,
		B.returndate
		FROM member as A ,borrow as B
		WHERE NOW() > B.returndate
		AND B.borrowcheck ='2' and
		A.id=B.id;
	</select>

	<select id="selectBest" resultType="MemberModel">
		SELECT A.name, A.score, A.id,
		A.numborrow
		FROM
		member AS A, borrow AS B
		WHERE B.borrowdate >
		date_sub(NOW(), interval 30 day) AND A.id=B.id
		ORDER BY A.score DESC

	</select>

	<select id="selectMemberList" resultType="MemberModel">
		SELECT *
		FROM member
		ORDER BY team, numborrow

	</select>
	<!-- Board 관련 쿼리 -->



	<select id="selectBoard" resultType="BoardModel">
		SELECT *
		FROM bulletinboard
	</select>

	<select id="selectBoardregister" resultType="BoardModel">
		SELECT *
		FROM
		bulletinboard
		ORDER BY registerdate;
	</select>

	<select id="selectMaxGrade" resultType="int">
		SELECT MAX(grade)
		FROM
		book;
	</select>

	<select id="selectBoardtitle" resultType="BoardModel">
		SELECT *
		FROM
		bulletinboard
		ORDER BY title;
	</select>

	<insert id="insertBoard" parameterType="BoardModel">
		INSERT INTO bulletinboard
		(title,content,registerdate,modifidate,id)
		VALUES
		(#{title},#{content},NOW(),NOW(),#{id})
	</insert>

	<delete id="deleteBoard" parameterType="String">
		DELETE FROM bulletinboard
		WHERE
		boardnum=#{boardnum}
	</delete>

	<update id="modifyBoard" parameterType="BoardModel">
		UPDATE bulletinboard
		SET
		content=#{content}
		WHERE boardnum=#{boardnum}
	</update>

	<select id="noticeList" resultType="BoardModel">
		SELECT *
		FROM
		notice
		ORDER BY
		registerdate DESC;
	</select>

	<insert id="insertNotice" parameterType="BoardModel">
		INSERT INTO notice
		(content, registerdate)
		VALUES
		(#{content}, DATE_FORMAT(NOW(),
		"%Y-%m-%d"))
	</insert>
	<delete id="deleteNotice" parameterType="String">
		DELETE FROM notice
		WHERE
		boardnum=#{boardnum}
	</delete>

	<update id="modifyNotice" parameterType="BoardModel">
		UPDATE notice
		SET
		content=#{content}
		WHERE boardnum=#{boardnum}
	</update>


	<!-- Book 관련 쿼리 -->

	<insert id="insertBook" parameterType="BookModel">
		INSERT INTO book
		(bookname,bookCode,genre,publisher,writer,grade,borrowcheck,imageurl,
		buydate, isbn, priceSales, summary)
		VALUES
		(#{bookname},#{bookCode},#{genre},#{publisher},#{writer},0,0,#{imageurl},
		NOW(), #{isbn}, #{priceSales}, #{summary})
	</insert>


	<select id="selectBook" parameterType="String" resultType="BookModel">
		SELECT * FROM book WHERE bookCode=#{bookCode}
	</select>

	<select id="searchBook" parameterType="String" resultType="BookModel">
		SELECT * FROM book
		WHERE bookname LIKE
		CONCAT('%',#{keyword},'%')
		ORDER
		BY buydate DESC

	</select>

	<delete id="deleteBook" parameterType="String">
		DELETE FROM book
		WHERE
		bookCode=#{bookCode}
	</delete>


	<update id="updateBook" parameterType="BookModel">
		UPDATE book
		SET
		bookname=#{bookname}, genre=#{genre},
		publisher=#{publisher},writer=#{writer}
		WHERE bookCode=#{bookCode}
	</update>

	<select id="getNewbook" resultType="BookModel">
		SELECT *
		FROM book
		ORDER BY
		buydate DESC
	</select>

	<select id="getBestSeller" resultType="BookModel">
		SELECT *
		FROM book
		ORDER BY
		grade DESC
	</select>
	<!-- 구매요청, 대여 관련 커리 -->

	<insert id="requestBook" parameterType="BookModel">
		INSERT INTO request
		(id,
		requestdate,
		bookname,bookCode,
		pricesales,writer,quantity,genre,link,
		imageurl, isbn, publisher, summary)
		VALUES
		(#{id},
		now(),#{bookname},#{bookCode},#{priceSales},#{writer},#{quantity},#{genre},#{link},#{imageurl},#{isbn},
		#{publisher}, #{summary})
	</insert>

	<update id="deleteRequest" parameterType="BookModel">
		UPDATE request
		SET
		bookCode='0'
		WHERE bookCode=#{bookCode}
	</update>

	<select id="requestList" resultType="BookModel">
		SELECT *
		FROM
		request AS A,
		member AS B 
		WHERE A.id=B.id AND A.bookCode!='0'
		ORDER BY
		A.requestdate DESC;
	</select>

	<select id="selectRequest" parameterType="String" resultType="BookModel">
		SELECT *
		FROM request
		WHERE bookCode=#{bookCode}

	</select>



	<!-- 대여관련 쿼리 -->
	<select id="borrowListAll" resultType="BookModel">
		SELECT * FROM book AS A,
		borrow AS B
		WHERE B.borrowcheck=1 AND A.bookCode=B.bookCode
		ORDER BY
		B.borrowdate DESC;
	</select>

	<select id="borrowList" resultType="BookModel" parameterType="String">
		SELECT *
		FROM book AS A, borrow AS B
		WHERE B.id = #{id} AND
		(B.borrowcheck='1' OR B.borrowcheck='2') AND
		A.bookCode=B.bookCode
		ORDER BY
		B.borrowdate DESC;
	</select>

	<insert id="borrowBook1" parameterType="BookModel">
		INSERT INTO
		borrow
		(bookCode, borrowdate, returndate, borrowcheck, id)
		VALUES(#{bookCode}, now(), date_add(now(), interval +20 day),
		1, #{id})
	</insert>

	<update id="borrowBook2" parameterType="String">
		UPDATE
		book
		SET
		borrowcheck='1'
		WHERE bookCode=#{bookCode}
	</update>

	<update id="stopBorrow" parameterType="String">
		UPDATE book A INNER
		JOIN
		borrow B
		ON A.borrowcheck = B.borrowcheck
		SET
		A.borrowcheck='4'
		WHERE
		A.bookCode=#{bookCode} AND
		B.bookCode=#{bookCode}
	</update>
	<update id="confirmBorrowBook" parameterType="String">
		UPDATE book A INNER
		JOIN borrow B
		ON A.borrowcheck = B.borrowcheck
		SET
		A.borrowcheck='2',
		B.borrowcheck='2',
		B.borrowdate=NOW()
		WHERE
		A.bookCode=#{bookCode} AND
		B.bookCode=#{bookCode}
	</update>

	<update id="upPoint" parameterType="String">
		UPDATE member SET numborrow =
		numborrow + 1
		WHERE id = #{id}
	</update>

	<update id="returnBook" parameterType="String">
		UPDATE book A INNER
		JOIN
		borrow B
		ON A.borrowcheck = B.borrowcheck
		SET
		A.borrowcheck='0',
		B.borrowcheck='3',
		B.returndate=NOW()
		WHERE
		A.bookCode=#{bookCode} AND
		B.bookCode=#{bookCode}
	</update>
	<!-- <update id="confirmReturnBook" parameterType="String"> UPDATE book 
		A INNER JOIN borrow B ON A.borrowcheck = B.borrowcheck SET A.borrowcheck='0', 
		B.borrowcheck='0' WHERE A.bookCode=#{bookCode} AND B.bookCode=#{bookCode} 
		</update> -->
	<select id="returnListAll" resultType="BookModel">
		SELECT *
		FROM book AS A,
		borrow AS B
		WHERE B.borrowcheck=3 AND A.bookCode=B.bookCode;
	</select>

	<update id="extendBorrowBook" parameterType="String">
		UPDATE borrow
		SET
		returndate = date_add(now(), interval +20 day)
		WHERE
		bookCode=#{bookCode} AND borrowcheck='2';
	</update>

	<update id="cancelBorrowBook" parameterType="String">
		UPDATE book
		SET
		borrowcheck='0'
		WHERE
		bookCode=#{bookCode} AND borrowcheck='1';
	</update>

	<delete id="deleteBorrowBook" parameterType="BookModel">
		DELETE FROM borrow
		WHERE bookCode=#{bookCode} AND id=#{id}
	</delete>

	<select id="rentListAll" parameterType="String" resultType="BookModel">
		SELECT * FROM book AS A, borrow AS B
		WHERE <![CDATA[B.returndate > NOW()]]>
		AND A.bookCode=B.bookCode AND B.borrowcheck='2'
		ORDER BY
		B.borrowdate
		DESC;
	</select>

	<!-- <delete id="deleteRecord" parameterType="String"> DELETE ON borrow 
		WHERE DELETE ON reserve WHERE id=#{id} AND bookCode=#{bookCode} </delete> -->
	<select id="recordList" parameterType="String" resultType="BookModel">
		SELECT * FROM book AS A, borrow AS B
		WHERE <![CDATA[B.borrowdate < NOW()]]>
		AND B.id=#{id} AND A.bookCode=B.bookCode AND B.borrowcheck='3'
		ORDER BY
		B.borrowdate DESC;
	</select>

	<select id="recordListAll" resultType="BookModel">
		SELECT * FROM book AS A, borrow AS B
		WHERE <![CDATA[B.borrowdate < NOW()]]>
		AND A.bookCode=B.bookCode AND B.borrowcheck='3'
		ORDER BY
		B.borrowdate
		DESC;
	</select>

	<delete id="deleteRecord" parameterType="BookModel">
		DELETE 1
		FROM borrow
		WHERE bookCode=#{bookCode} AND id=#{id} AND borrowcheck='3'
	</delete>

	<!-- 에약관련 쿼리 -->

	<insert id="insertReservation" parameterType="BookModel">
		INSERT INTO
		reservation(id, bookCode, reserveDate, reservecheck)
		VALUES(#{id},
		#{bookCode}, date_add(now(), interval 7
		day), 1)
	</insert>

	<update id="updateReservation" parameterType="String">
		UPDATE book SET
		borrowcheck='1', reservecheck='0' WHERE bookCode=#{bookCode}
	</update>

	<select id="selectReservation" parameterType="String"
		resultType="String">
		SELECT reservecheck
		FROM book
		WHERE bookCode=#{bookCode}
	</select>

	<select id="reservationList" parameterType="String" resultType="BookModel">
		SELECT *
		FROM book AS A, reservation AS B
		WHERE B.bookCode=#{bookCode}
		AND
		B.id=#{id}
		ORDER BY
		B.reservedate DESC;
	</select>

	<select id="reservationListAll" resultType="BookModel">
		SELECT *
		FROM book AS
		A, reservation AS B
		WHERE A.bookCode=B.bookCode AND
		B.reservecheck='1'
		ORDER BY
		B.reservedate DESC;
	</select>

	<delete id="deleteReservation" parameterType="BookModel">
		DELETE ON reserve
		WHERE id=#{id} AND bookCode=#{bookCode}
	</delete>



	<!-- 기타 쿼리 -->


</mapper>